<%page args="kernels, runtime_img, runtime_base, basearch, outroot, arch"/>
<%
configdir="tmp/config_files/uboot"
PXEBOOTDIR="images/pxeboot"
DTBDIR="images/pxeboot/dtb"
BOOTDIR="boot"
KERNELDIR=PXEBOOTDIR
STAGE2IMG="images/install.img"
LORAXDIR="usr/share/lorax/"

# keep a comma-delimited list of platforms installed to add to .treeinfo
platforms = ""
delimiter = ''
%>

mkdir images
install ${runtime_img} ${STAGE2IMG}
treeinfo stage2 mainimage ${STAGE2IMG}

mkdir ${DTBDIR}
install boot/dtb-*/*dtb  ${DTBDIR}/

## install kernels
mkdir ${KERNELDIR}
%for kernel in kernels:
    %if kernel.flavor:
        installkernel images-${kernel.flavor}-${basearch} ${kernel.path} ${KERNELDIR}/vmlinuz-${kernel.flavor}
        installinitrd images-${kernel.flavor}-${basearch} ${kernel.initrd.path} ${KERNELDIR}/initrd-${kernel.flavor}.img
<%
        platforms = platforms + delimiter + kernel.flavor
        delimiter = ','
%>
    %else:
        installkernel images-${basearch} ${kernel.path} ${KERNELDIR}/vmlinuz
        installinitrd images-${basearch} ${kernel.initrd.path} ${KERNELDIR}/initrd.img
    %endif
%endfor

# add platform to treeinfo for Beaker support
treeinfo ${basearch} platforms ${platforms}

## WHeeeeeeee, EFI.
<% efiargs=""; efigraft=""; efiarch32=None; efiarch64=None %>
%if exists("boot/efi/EFI/*/gcdarm.efi"):
    <%
    efiarch32 = 'ARM'
    efigraft="EFI/BOOT={0}/EFI/BOOT".format(outroot)
    images = ["images/efiboot.img"]
    for img in images:
        efiargs += " -eltorito-alt-boot -e {0} -no-emul-boot".format(img)
        efigraft += " {0}={1}/{0}".format(img,outroot)
    %>
    <%include file="efi.tmpl" args="configdir=configdir, KERNELDIR=KERNELDIR, efiarch32=efiarch32, efiarch64=efiarch64, isolabel=isolabel"/>
%endif

# Create optional product.img and updates.img
<% images=["product", "updates"] %>
%for img in images:
    %if exists("%s/%s/" % (LORAXDIR, img)):
        installimg --xz -9 --memlimit-compress=3700MiB ${LORAXDIR}/${img}/ images/${img}.img
        treeinfo images-${basearch} ${img}.img images/${img}.img
    %endif
%endfor

# Inherit iso-graft/ if it exists from external templates
<%
    import os
    if os.path.exists(workdir + "/iso-graft"):
        imggraft += " " + workdir + "/iso-graft"
%>

## FIXME: ARM may need some extra boot config

%if exists("boot/efi/EFI/*/gcdarm.efi"):
    ## make boot.iso
    runcmd mkisofs -o ${outroot}/images/boot.iso \
       ${efiargs} -R -J -V '${isolabel}' -T -graft-points \
       ${KERNELDIR}=${outroot}/${KERNELDIR} \
       ${STAGE2IMG}=${outroot}/${STAGE2IMG} \
       ${efigraft} ${imggraft}
    treeinfo images-${basearch} boot.iso images/boot.iso
%endif
